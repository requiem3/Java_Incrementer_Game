package test_es;

import java.awt.Container;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;

import javax.swing.JLabel;

import systems.*;

public class Game implements Runnable {
	//Game variables
	private int FPS = 60;
	
	//Systems
	private NumberSystem numSys;
	private ArmySystem armSys;
	private ZoneSystem zonSys;
	private AchievementSystem achSys;
	
	//GUI Variables
	private Board mBoard;
	private JLabel levelLabel;
	private JLabel expLabel;
	private JLabel cashLabel;
	
	//Threading
    private BlockingQueue<ArmySystem> queueArm = new LinkedBlockingQueue<ArmySystem>();
    private BlockingQueue<ZoneSystem> queueZone = new LinkedBlockingQueue<ZoneSystem>();
    private BlockingQueue<Integer> queueZoneNum = new LinkedBlockingQueue<Integer>();
    private BlockingQueue<Integer> queueLevelNum = new LinkedBlockingQueue<Integer>();
	
	public Game(Board board, BlockingQueue<Integer> qZoneNum, BlockingQueue<Integer> qLevelNum) {
		mBoard = board;
		queueZoneNum = qZoneNum;
		queueLevelNum = qLevelNum;
		armSys = new ArmySystem();
		zonSys = new ZoneSystem();
		numSys = new NumberSystem();
		
		levelLabel = board.getLevelLabel();
		expLabel = board.getExpLabel();
		cashLabel = board.getCashLabel();
		
		updateGUI();
	}
	
	public void run() {
		int zoneNum = 0; 
		int levelNum = 0;
		int pHP, pDPS;
		while(true) {
			if(queueLevelNum.size() != 0) {
				try {
					zoneNum = queueZoneNum.take();
					levelNum = queueLevelNum.take();
				} catch (InterruptedException e) {
					System.out.println("queue error");
					e.printStackTrace();
				}
				pDPS = armSys.calculateDPS();
				pHP = zonSys.zones[zoneNum-1][0];
				
				while(pHP >= 0) {
					System.out.println(pHP);
					try {
						Thread.sleep(1000);
					} catch (InterruptedException e) {e.printStackTrace();}
					pHP -= pDPS;
				}
				numSys.addExp(zonSys.zones[zoneNum-1][2]);
				numSys.addCash(zonSys.zones[zoneNum-1][1]);
				updateGUI();
			}
		}
	}
	
	public void updateGUI() {
		levelLabel.setText("Level: " + Integer.toString(numSys.getLevel()));
		expLabel.setText("Exp: " + Integer.toString(numSys.getExp()) + "/" + Integer.toString(numSys.getExpReq()));
		cashLabel.setText("Cash: " + Integer.toString(numSys.getCash()));
	}
}
