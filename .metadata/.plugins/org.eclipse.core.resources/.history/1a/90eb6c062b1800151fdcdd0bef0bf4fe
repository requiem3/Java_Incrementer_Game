package test_es;

import java.awt.Color;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;

import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JProgressBar;
import javax.swing.JScrollPane;
import javax.swing.SwingUtilities;

import test_es.Game;
import systems.*;

public class Board {
	private ImageIcon ii;
	private ArmySystem armSys;
	private int currentZone;
	
	//GUI elements
	private JLabel levelLabel;
	private JLabel expLabel;
	private JLabel cashLabel;
	private JLabel chickenCountLabel;
	private JLabel chickenCostLabel;
	private JLabel blobCountLabel;
	private JLabel blobCostLabel;
	private JLabel dogCountLabel;
	private JLabel dogCostLabel;
	private JLabel zombieCountLabel;
	private JLabel zombieCostLabel;
	private JLabel walkerCountLabel;
	private JLabel walkerCostLabel;
	private JLabel sniperCountLabel;
	private JLabel sniperCostLabel;
	private JLabel doomCountLabel;
	private JLabel doomCostLabel;
	private JButton level1Button;
	private JProgressBar progressBar;
	
	private Thread gameThread;
    final BlockingQueue<Integer> queueZoneNum = new LinkedBlockingQueue<Integer>();
    final BlockingQueue<Integer> queueLevelNum = new LinkedBlockingQueue<Integer>();
    final BlockingQueue<Integer> queueBuyNum = new LinkedBlockingQueue<Integer>();
	
	public Board() {
		currentZone = 1;
		armSys = new ArmySystem();
		createAndShowGUI();
	}
	
    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                Board b = new Board();
            }
        });
    }
    
    public void addComponentsToPane(Container pane) {
        pane.setLayout(new GridLayout(1, 0));
        pane.setPreferredSize(new Dimension(1000,600));

        JPanel left = new JPanel();
        pane.add(left);
        left.setLayout(new BoxLayout(left, BoxLayout.Y_AXIS));

        JPanel leftTop = new JPanel(new GridBagLayout());
		
		JScrollPane scrollPane = new JScrollPane(leftTop);
		scrollPane.setPreferredSize(new Dimension(333,300));
		left.add(scrollPane);
		
		GridBagConstraints gbc = new GridBagConstraints();
		gbc.gridwidth = GridBagConstraints.REMAINDER;
        gbc.fill = GridBagConstraints.HORIZONTAL;
		gbc.weightx = 1;
		gbc.insets = new Insets(5, 10, 5, 10);
		
		JLabel zoneLabel = new JLabel();
		zoneLabel.setText("Zones");
		leftTop.add(zoneLabel, gbc);
		
		JButton neighborhoodButton = new JButton();
		neighborhoodButton.setPreferredSize(new Dimension(200, 50));
		neighborhoodButton.setIcon(ii);
		neighborhoodButton.addActionListener(new ActionListener() {
	        public void actionPerformed(ActionEvent e) {
	        	currentZone = 1;
	        }
	    });
		leftTop.add(neighborhoodButton, gbc);
		
		JButton jb1 = new JButton();
		jb1.setPreferredSize(new Dimension(200, 50));
		jb1.setIcon(ii);
		leftTop.add(jb1, gbc);
		
		JButton jb2 = new JButton();
		jb2.setPreferredSize(new Dimension(200, 50));
		jb2.setIcon(ii);
		leftTop.add(jb2, gbc);
		
		JButton jb3 = new JButton();
		jb3.setPreferredSize(new Dimension(200, 50));
		jb3.setIcon(ii);
		leftTop.add(jb3, gbc);
		
		JButton jb4 = new JButton();
		jb4.setPreferredSize(new Dimension(200, 50));
		jb4.setIcon(ii);
		leftTop.add(jb4, gbc);
		
		JButton jb5 = new JButton();
		jb5.setPreferredSize(new Dimension(200, 50));
		jb5.setIcon(ii);
		leftTop.add(jb5, gbc);
		
		JButton jb6 = new JButton();
		jb6.setPreferredSize(new Dimension(200, 50));
		jb6.setIcon(ii);
		leftTop.add(jb6, gbc);

	    JPanel leftBottom = new JPanel(new GridBagLayout());
	    leftBottom.setPreferredSize(new Dimension(333, 300));
	    left.add(leftBottom);
	    
	    GridBagConstraints gbc2 = new GridBagConstraints();
	    gbc2.anchor = GridBagConstraints.NORTHWEST;
	    
	    JLabel zoneLevelLabel = new JLabel();
	    zoneLevelLabel.setText("Levels");
	    gbc2.gridx = 0;
	    gbc2.gridy = 0;
	    gbc2.weighty = 0;
	    gbc2.weightx = 0;
	    leftBottom.add(zoneLevelLabel, gbc2);
	    
		level1Button = new JButton();
		level1Button.setPreferredSize(new Dimension(50, 50));
		gbc2.gridx = 0;
	    gbc2.gridy = 1;
	    gbc2.weighty = 1;
	    gbc2.weightx = 0;
	    level1Button.addActionListener(new ActionListener() {
	        public void actionPerformed(ActionEvent e) {
	        	queueLevelNum.add(1);
	        	queueZoneNum.add(currentZone);
	        }
	    });
		leftBottom.add(level1Button, gbc2);
		
		JButton level2Button = new JButton();
		level2Button.setPreferredSize(new Dimension(50, 50));
		gbc2.gridx = 1;
	    gbc2.gridy = 1;
	    gbc2.weighty = 1;
	    gbc2.weightx = 1;
	    level2Button.addActionListener(new ActionListener() {
	        public void actionPerformed(ActionEvent e) {
	        	queueLevelNum.add(2);
	        	queueZoneNum.add(currentZone);
	        }
	    });
		leftBottom.add(level2Button, gbc2);
		
		progressBar = new JProgressBar(0, 0);
		progressBar.setValue(0);
		progressBar.setStringPainted(true);
		leftBottom.add(progressBar);
	
	    JPanel middle = new JPanel();
	    pane.add(middle);
	    middle.setLayout(new BoxLayout(middle, BoxLayout.Y_AXIS));
	
	    JPanel middleTop = new JPanel();
	    middleTop.setPreferredSize(new Dimension(333, 200));
	    middleTop.setLayout(new BoxLayout(middleTop, BoxLayout.Y_AXIS));
	    middle.add(middleTop);
	    
	    JLabel playerLabel = new JLabel();
	    playerLabel.setText("Scientist");
	    middleTop.add(playerLabel);
	    
	    levelLabel = new JLabel();
	    levelLabel.setText("Level: ");
	    middleTop.add(levelLabel);
	    
	    expLabel = new JLabel();
	    expLabel.setText("Exp: ");
	    middleTop.add(expLabel);
	    
	    cashLabel = new JLabel();
	    cashLabel.setText("Cash: ");
	    middleTop.add(cashLabel);
	
	    JPanel middleBottom = new JPanel();
	    middleBottom.setPreferredSize(new Dimension(333, 400));
	    middleBottom.setBackground(Color.yellow);
	    middle.add(middleBottom);
	
	    JPanel right = new JPanel(new GridBagLayout());
	    right.setPreferredSize(new Dimension(333,600));

	    GridBagConstraints gbc3 = new GridBagConstraints();
	    gbc3.anchor = GridBagConstraints.NORTHWEST;
	    
	    JLabel armyLabel = new JLabel();
	    armyLabel.setText("Army");
	    gbc3.gridx = 0;
	    gbc3.gridy = 0;
	    gbc3.weighty = 0;
	    gbc3.weightx = 0;
	    right.add(armyLabel, gbc3);
	    
	    JLabel chickenLabel = new JLabel();
	    chickenLabel.setText("Maniacal Chicken");
	    gbc3.gridx = 0;
	    gbc3.gridy = 1;
	    gbc3.weighty = 0;
	    gbc3.weightx = 0;
	    right.add(chickenLabel, gbc3);
	    
	    chickenCountLabel = new JLabel();
	    chickenCountLabel.setText("Count: ");
	    gbc3.gridx = 0;
	    gbc3.gridy = 2;
	    gbc3.weighty = 0;
	    gbc3.weightx = 0;
	    right.add(chickenCountLabel, gbc3);
	    
	    chickenCostLabel = new JLabel();
	    chickenCostLabel.setText("Cost: ");
	    gbc3.gridx = 0;
	    gbc3.gridy = 3;
	    gbc3.weighty = 1;
	    gbc3.weightx = 1;
	    right.add(chickenCostLabel, gbc3);
	    
	    JLabel blobLabel = new JLabel();
	    blobLabel.setText("Poisonous Blob");
	    gbc3.gridx = 0;
	    gbc3.gridy = 1;
	    gbc3.weighty = 0;
	    gbc3.weightx = 0;
	    right.add(blobLabel, gbc3);
	    
	    JButton chickenButton = new JButton();
	    chickenButton.setPreferredSize(new Dimension(50, 50));
	    gbc3.gridx = 1;
	    gbc3.gridy = 1;
	    gbc3.gridheight = 3;
	    gbc3.weighty = 0;
	    gbc3.weightx = 0;
	    chickenButton.addActionListener(new ActionListener() {
	        public void actionPerformed(ActionEvent e) {
	        	queueBuyNum.add(1);
	        }
	    });
	    right.add(chickenButton, gbc3);
	    
	    pane.add(right);
	    
    }

    private void createAndShowGUI() {
    	loadImages();
        JFrame frame = new JFrame("GridBagLayoutDemo");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        addComponentsToPane(frame.getContentPane());
        frame.pack();
        frame.setVisible(true);
        
        gameThread = new Thread(new Game(this, queueZoneNum, queueLevelNum, queueBuyNum));
    	gameThread.start();	
    }
	
	private void loadImages() {
		ii = new ImageIcon("nhButton.png");
	}
	
	public JLabel getLevelLabel() {
		return(levelLabel);
	}
	
	public JLabel getExpLabel() {
		return(expLabel);
	}
	
	public JLabel getCashLabel() {
		return(cashLabel);
	}
	
	public JLabel getChickenCountLabel() {
		return(chickenCountLabel);
	}
	
	public JLabel getChickenCostLabel() {
		return(chickenCostLabel);
	}
	
	public JProgressBar getProgressBar() {
		return(progressBar);
	}
	
}
